server {
	listen 80;
	server_name example.com;

	location /deb/ {
		root /var/www;

		access_log off;
		log_not_found off;

		default_type text/plain;

		return 301 https://$server_name$request_uri;

		## optional "security measure" - hide "hidden" files
		# location ~ /\. { internal; }

		## allow APT work with plain HTTP

		location ~* ^/deb/[^/]+/dists/.*/(?:InRelease|Release(?:|\.gpg)|(?:Packages|Sources)(?:|\.(?:gz|bz2|xz|zstd?)))$ {
			try_files $uri $uri/ =404;
		}

		location ~* ^/deb/[^/]+/pool/.*/[^/]+\.(?:u?deb|dsc|tar|gz|bz2|xz|zstd?|Z)$ {
			try_files $uri $uri/ =404;
		}

		## various tarball file name extensions (sic!)
		location ~* ^/deb/[^/]+/pool/.*/[^/]+\.t(?:[agx]z|bz2?|[bz]2|bJ|zo|lz(?:ma?)?|zstd?|a?Z)$ {
			try_files $uri $uri/ =404;
		}
	}
}

server {
	listen 443 ssl http2;
	server_name example.com;

	location /deb/ {
		root /var/www;

		access_log off;
		log_not_found off;

		default_type text/plain;

		try_files $uri $uri/ =404;

		## make repository browsable with Web-browser
		autoindex on;

		## optional "security measure" - hide "hidden" files
		# location ~ /\. { internal; }
	}

	ssl_certificate         /etc/ssl/example.com/fullchain.pem;
	ssl_certificate_key     /etc/ssl/example.com/privkey.pem;
	ssl_trusted_certificate /etc/ssl/example.com/chain.pem;

	## Mozilla Intermediate SSL configuration

	ssl_protocols TLSv1.2 TLSv1.3;

	ssl_prefer_server_ciphers off;
	ssl_ciphers TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

	ssl_buffer_size 4k;

	ssl_session_cache shared:SSL:10m;
	ssl_session_timeout 1h;
	ssl_session_tickets off;
}
